<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wKReP0KsAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>289</value>
  </metadata>
</root>